# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "ir-cr"},
                  {adapter: 3, virtualbox__intnet: "ir-cr"},
                  {ip: '192.168.56.11', adapter: 8},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "ir-cr"},
                  {adapter: 3, virtualbox__intnet: "ir-cr"},
                  {adapter: 4, virtualbox__intnet: "office1"},
                  {ip: '192.168.56.12', adapter: 8},
                ]
  },
  
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "office1"},
                  {ip: '192.168.56.13', adapter: 8}, 
                ]
  },
  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "office1"},
                  {ip: '192.168.56.14', adapter: 8}, 
                ]
  },
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "office1"},
                  {ip: '192.168.56.15', adapter: 8}, 
                ]
  },
  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                  {adapter: 2, virtualbox__intnet: "office1"},
                  {ip: '192.168.56.16', adapter: 8}, 
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    
#    config.vm.provider "virtualbox" do |v|
#      v.memory = 256
#    end

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
        box.vm.provision "shell", inline: <<-SHELL
          sudo su  
          mkdir /root/.ssh
          cp ~vagrant/.ssh/auth* /root/.ssh
        SHELL
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/inetRouter.yml"
        end
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/centralRouter.yml"
        end
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/testClient1.yml"
        end
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/testServer1.yml"
        end
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/testClient2.yml"
        end
        box.vm.provision "ansible" do |ansible| 
          ansible.playbook = "./playbooks/testServer2.yml"
        end
        

#        case boxname.to_s
#        when "inetRouter"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY*
#            yum install -y epel-release python36
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/inetRouter.yml"
#          end        
#        when "centralRouter"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY*
#            yum install -y epel-release python36
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/centralRouter.yml"
#          end        
#        when "centralServer"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY*
#            yum install -y epel-release python36
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/centralServer.yml"
#          end        
#        when "office1Router"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/office1Router.yml"
#          end        
#        when "office1Server"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/office1Server.yml"
#          end        
#        when "office2Router"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/office2Router.yml"
#          end        
#        when "office2Server"
#          box.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            sudo echo $(cat /home/vagrant/authorized_keys) >>/root/.ssh/authorized_keys
#            apt-get update && sudo apt-get upgrade -y
#            SHELL
#          box.vm.provision "ansible" do |ansible|    
#            ansible.playbook = "./playbooks/office2Server.yml"
#          end        
#        end
      end
  end
end
