---

- name: add user borg
  user:
    name: "{{  item  }}"
    state: present
    password: "{{ upassword | password_hash('sha512') }}"
    shell: /bin/bash
  loop:
    - borg

- name: Install pexpect throuhg pip
  become: true
  pip:
    name: "pexpect>=3.3"
    state: present

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: /root/.ssh/id_rsa

- name: copy public key to backup:/home/borg/.ssh/authorized_keys
  expect:
    command: scp -o "StrictHostKeyChecking=no" /root/.ssh/id_rsa.pub borg@192.168.11.160:/home/borg/.ssh/authorized_keys
    responses:
      Are you sure you want to continue connecting (yes/no)?: "yes"
      borg@192.168.11.160's password: "{{  borg_user_pass }}"

- name: init borg
  expect:
    command: borg init --encryption=repokey borg@192.168.11.160:/var/backup/
    responses:
      (?i)Enter new passphrase: "{{  borg_ps  }}"
      (?i)Enter same passphrase again: "{{  borg_ps  }}"
      (?i)Do you want your passphrase to be displayed for verification?: "n"

- name: Create service
  debug:
    msg: "!!!!!   Create BORG Service   !!!!!"

- name: copy service templates
  template:
    src: borg-backup.service.j2
    dest: /etc/systemd/system/borg-backup.service
    mode: 755
  notify:
    - restart_borg_service

- name: copy service templates
  template:
    src: borg-backup.timer.j2
    dest: /etc/systemd/system/borg-backup.timer
    mode: 755
  notify:
    - restart_borg_service

- name: reload systremd
  systemd:
    daemon_reload: yes

- name: start & enable borg timer
  systemd:
    name: borg-backup.timer
    enabled: yes
    state: started  

- name: start & enable borg service
  systemd:
    name: borg-backup.service
    state: started  

- name: create rsyslog .conf for borg
  template:
    src: borg_service_client.conf.j2
    dest: /etc/rsyslog.d/borg_service.conf
  notify:
    - restart_rsyslog
    